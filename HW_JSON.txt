JSON
 4. Создать внешний репозиторий c названием JSON.
 В Гитхабе нажать на имя своего профиля, потом на Repositories -> new -> задать имя,
выбрать Public, поставить галочку на Add a README file -> Create repository 
 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone ссылка на репозиторий.git
 6. Внутри локального JSON создать файл “new.json”.
 touch new.json
 7. Добавить файл под гит.
 git add new.json 
 8. Закоммитить файл.
 git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий.
 git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json -> нажать i, написать текст, ESC, :wq
 11. Отправить изменения на внешний репозиторий.
 git commit -am "add modify new.json"
 git push
 12. Создать файл preferences.json
 touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
  vim preferences.json -> нажать i, написать текст, ESC, :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
  vim sklls.json -> нажать i, написать текст, ESC, :wq
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add . $$ git commit -m "preferences.json"
 git push
 16. На веб интерфейсе создать файл bug_report.json.
 В репозитории нажать add file -> create new file -> дать название 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 Открыть файл -> edit this file -> {, написать текст, } 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit changes 
 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull
